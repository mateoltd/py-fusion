name: Build Linux App

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        # Use libgl1 instead of libgl1-mesa-glx for Ubuntu 24.04
        sudo apt-get install -y libgl1 libxkbcommon-x11-0 libdbus-1-3 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xkb1

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build CLI version
      run: |
        pyinstaller --name py-fusion --onefile index.py

    - name: Build GUI version
      run: |
        pyinstaller --name py-fusion-gui --onefile --windowed --icon=py_fusion_gui/resources/icons/py_fusion.png run_py_fusion_gui.py

    - name: Create AppImage for GUI version
      run: |
        # Install AppImage tools and dependencies
        sudo apt-get install -y fuse libfuse2 patchelf

        # Download and prepare AppImageTool
        wget -q -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
        chmod +x appimagetool

        # Extract AppImageTool to make it work without FUSE
        ./appimagetool --appimage-extract
        sudo mv squashfs-root/usr/bin/appimagetool /usr/local/bin/
        sudo chmod +x /usr/local/bin/appimagetool

        # Create AppDir structure
        mkdir -p AppDir/usr/bin
        mkdir -p AppDir/usr/share/applications
        mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps

        # Copy executable
        cp dist/py-fusion-gui AppDir/usr/bin/

        # Copy icon
        cp py_fusion_gui/resources/icons/py_fusion_256.png AppDir/usr/share/icons/hicolor/256x256/apps/py-fusion.png

        # Create desktop file
        cat > AppDir/usr/share/applications/py-fusion.desktop << EOF
        [Desktop Entry]
        Type=Application
        Name=Py-Fusion
        Exec=py-fusion-gui
        Icon=py-fusion
        Categories=Utility;
        EOF

        # Create AppRun file
        cat > AppDir/AppRun << 'EOF'
        #!/bin/bash
        SELF=$(readlink -f "$0")
        HERE=${SELF%/*}
        export PATH="${HERE}/usr/bin:${PATH}"
        "${HERE}/usr/bin/py-fusion-gui" "$@"
        EOF

        chmod +x AppDir/AppRun

        # Create AppImage
        # Use a simpler approach - just copy the executable and create a basic AppImage
        cd AppDir
        /usr/local/bin/appimagetool . ../dist/Py-Fusion-x86_64.AppImage || {
          echo "AppImage creation failed, creating a tarball instead"
          cd ..
          mkdir -p dist/py-fusion-gui-linux
          cp dist/py-fusion-gui dist/py-fusion-gui-linux/
          cp LICENSE dist/py-fusion-gui-linux/
          cp README.md dist/py-fusion-gui-linux/
          tar -czvf dist/Py-Fusion-x86_64.AppImage -C dist py-fusion-gui-linux
        }

    - name: Create tarball for CLI version
      run: |
        mkdir -p dist/py-fusion-cli-linux
        cp dist/py-fusion dist/py-fusion-cli-linux/
        cp LICENSE dist/py-fusion-cli-linux/
        cp README.md dist/py-fusion-cli-linux/
        tar -czvf dist/py-fusion-cli-linux.tar.gz -C dist py-fusion-cli-linux

    - name: Upload CLI artifact
      uses: actions/upload-artifact@v4
      with:
        name: py-fusion-cli-linux
        path: dist/py-fusion-cli-linux.tar.gz

    - name: Upload GUI artifact
      uses: actions/upload-artifact@v4
      with:
        name: py-fusion-gui-linux
        path: dist/Py-Fusion-x86_64.AppImage
